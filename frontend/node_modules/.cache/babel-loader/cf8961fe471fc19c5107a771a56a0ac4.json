{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neha\\\\Downloads\\\\codershouse-mern-prep\\\\frontend\\\\src\\\\pages\\\\Room\\\\Room.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useWebRTC } from '../../hooks/useWebRTC';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { getRoom } from '../../http';\nimport styles from './Room.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Room = () => {\n  _s();\n\n  const user = useSelector(state => state.auth.user);\n  const {\n    id: roomId\n  } = useParams();\n  const [room, setRoom] = useState(null);\n  const {\n    clients,\n    provideRef,\n    handleMute,\n    localStream\n  } = useWebRTC(roomId, user);\n  const history = useHistory();\n  const [isMuted, setMuted] = useState(true);\n  useEffect(() => {\n    const fetchRoom = async () => {\n      const {\n        data\n      } = await getRoom(roomId);\n      setRoom(prev => data);\n    };\n\n    fetchRoom();\n  }, [roomId]);\n  useEffect(() => {\n    handleMute(isMuted, user.id);\n  }, [isMuted]);\n\n  const handManualLeave = () => {\n    history.push('/rooms');\n  };\n\n  const handleMuteClick = clientId => {\n    if (clientId !== user.id) return;\n    setMuted(prev => !prev);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handManualLeave,\n        className: styles.goBack,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/arrow-left.png\",\n          alt: \"arrow-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"All voice rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.clientsWrap,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: [room && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.topic,\n          children: room.topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.actions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.actionBtn,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/palm.png\",\n              alt: \"palm-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handManualLeave,\n            className: styles.actionBtn,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/win.png\",\n              alt: \"win-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Leave quietly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.clientsList,\n        children: clients.map(client => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.client,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.userHead,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: styles.userAvatar,\n                src: client.avatar,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n                autoPlay: true,\n                playsInline: true,\n                ref: instance => {\n                  provideRef(instance, client.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleMuteClick(client.id),\n                className: styles.micBtn,\n                children: client.muted ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.mic,\n                  src: \"/images/mic-mute.png\",\n                  alt: \"mic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.micImg,\n                  src: \"/images/mic.png\",\n                  alt: \"mic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: client.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this)]\n          }, client.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Room, \"UoORxaOfGBUBVX1/K4kV5wEEuSw=\", false, function () {\n  return [useSelector, useParams, useWebRTC, useHistory];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/neha/Downloads/codershouse-mern-prep/frontend/src/pages/Room/Room.jsx"],"names":["React","useState","useEffect","useSelector","useWebRTC","useParams","useHistory","getRoom","styles","Room","user","state","auth","id","roomId","room","setRoom","clients","provideRef","handleMute","localStream","history","isMuted","setMuted","fetchRoom","data","prev","handManualLeave","push","handleMuteClick","clientId","goBack","clientsWrap","header","topic","actions","actionBtn","clientsList","map","client","userHead","userAvatar","avatar","instance","micBtn","muted","mic","micImg","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,IAAI,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,IAAvB,CAAxB;AACA,QAAM;AAAEG,IAAAA,EAAE,EAAEC;AAAN,MAAiBT,SAAS,EAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAM;AAAEgB,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA,UAAvB;AAAmCC,IAAAA;AAAnC,MAAmDhB,SAAS,CAC9DU,MAD8D,EAE9DJ,IAF8D,CAAlE;AAKA,QAAMW,OAAO,GAAGf,UAAU,EAA1B;AAEA,QAAM,CAACgB,OAAD,EAAUC,QAAV,IAAsBtB,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsB,SAAS,GAAG,YAAY;AAC1B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMlB,OAAO,CAACO,MAAD,CAA9B;AACAE,MAAAA,OAAO,CAAEU,IAAD,IAAUD,IAAX,CAAP;AACH,KAHD;;AAKAD,IAAAA,SAAS;AACZ,GAPQ,EAON,CAACV,MAAD,CAPM,CAAT;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,UAAU,CAACG,OAAD,EAAUZ,IAAI,CAACG,EAAf,CAAV;AACH,GAFQ,EAEN,CAACS,OAAD,CAFM,CAAT;;AAIA,QAAMK,eAAe,GAAG,MAAM;AAC1BN,IAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAIC,QAAD,IAAc;AAClC,QAAIA,QAAQ,KAAKpB,IAAI,CAACG,EAAtB,EAA0B;AAC1BU,IAAAA,QAAQ,CAAEG,IAAD,IAAU,CAACA,IAAZ,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEC,eAAjB;AAAkC,QAAA,SAAS,EAAEnB,MAAM,CAACuB,MAApD;AAAA,gCACI;AAAK,UAAA,GAAG,EAAC,wBAAT;AAAkC,UAAA,GAAG,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAEvB,MAAM,CAACwB,WAAvB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAExB,MAAM,CAACyB,MAAvB;AAAA,mBACKlB,IAAI,iBAAI;AAAI,UAAA,SAAS,EAAEP,MAAM,CAAC0B,KAAtB;AAAA,oBAA8BnB,IAAI,CAACmB;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADb,eAEI;AAAK,UAAA,SAAS,EAAE1B,MAAM,CAAC2B,OAAvB;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAA1B;AAAA,mCACI;AAAK,cAAA,GAAG,EAAC,kBAAT;AAA4B,cAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AACI,YAAA,OAAO,EAAET,eADb;AAEI,YAAA,SAAS,EAAEnB,MAAM,CAAC4B,SAFtB;AAAA,oCAII;AAAK,cAAA,GAAG,EAAC,iBAAT;AAA2B,cAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI;AAAK,QAAA,SAAS,EAAE5B,MAAM,CAAC6B,WAAvB;AAAA,kBACKpB,OAAO,CAACqB,GAAR,CAAaC,MAAD,IAAY;AACrB,8BACI;AAAK,YAAA,SAAS,EAAE/B,MAAM,CAAC+B,MAAvB;AAAA,oCACI;AAAK,cAAA,SAAS,EAAE/B,MAAM,CAACgC,QAAvB;AAAA,sCACI;AACI,gBAAA,SAAS,EAAEhC,MAAM,CAACiC,UADtB;AAEI,gBAAA,GAAG,EAAEF,MAAM,CAACG,MAFhB;AAGI,gBAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI;AACI,gBAAA,QAAQ,MADZ;AAEI,gBAAA,WAAW,MAFf;AAGI,gBAAA,GAAG,EAAGC,QAAD,IAAc;AACfzB,kBAAAA,UAAU,CAACyB,QAAD,EAAWJ,MAAM,CAAC1B,EAAlB,CAAV;AACH;AALL;AAAA;AAAA;AAAA;AAAA,sBANJ,eAaI;AACI,gBAAA,OAAO,EAAE,MACLgB,eAAe,CAACU,MAAM,CAAC1B,EAAR,CAFvB;AAII,gBAAA,SAAS,EAAEL,MAAM,CAACoC,MAJtB;AAAA,0BAMKL,MAAM,CAACM,KAAP,gBACG;AACI,kBAAA,SAAS,EAAErC,MAAM,CAACsC,GADtB;AAEI,kBAAA,GAAG,EAAC,sBAFR;AAGI,kBAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,wBADH,gBAOG;AACI,kBAAA,SAAS,EAAEtC,MAAM,CAACuC,MADtB;AAEI,kBAAA,GAAG,EAAC,iBAFR;AAGI,kBAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AAbR;AAAA;AAAA;AAAA;AAAA,sBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAmCI;AAAA,wBAAKR,MAAM,CAACS;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAnCJ;AAAA,aAAoCT,MAAM,CAAC1B,EAA3C;AAAA;AAAA;AAAA;AAAA,kBADJ;AAuCH,SAxCA;AADL;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsEH,CA1GD;;GAAMJ,I;UACWN,W,EACUE,S,EAGkCD,S,EAKzCE,U;;;KAVdG,I;AA4GN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useWebRTC } from '../../hooks/useWebRTC';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { getRoom } from '../../http';\n\nimport styles from './Room.module.css';\n\nconst Room = () => {\n    const user = useSelector((state) => state.auth.user);\n    const { id: roomId } = useParams();\n    const [room, setRoom] = useState(null);\n\n    const { clients, provideRef, handleMute, localStream } = useWebRTC(\n        roomId,\n        user\n    );\n\n    const history = useHistory();\n\n    const [isMuted, setMuted] = useState(true);\n\n    useEffect(() => {\n        const fetchRoom = async () => {\n            const { data } = await getRoom(roomId);\n            setRoom((prev) => data);\n        };\n\n        fetchRoom();\n    }, [roomId]);\n\n    useEffect(() => {\n        handleMute(isMuted, user.id);\n    }, [isMuted]);\n\n    const handManualLeave = () => {\n        history.push('/rooms');\n    };\n\n    const handleMuteClick = (clientId) => {\n        if (clientId !== user.id) return;\n        setMuted((prev) => !prev);\n    };\n\n    return (\n        <div>\n            <div className=\"container\">\n                <button onClick={handManualLeave} className={styles.goBack}>\n                    <img src=\"/images/arrow-left.png\" alt=\"arrow-left\" />\n                    <span>All voice rooms</span>\n                </button>\n            </div>\n            <div className={styles.clientsWrap}>\n                <div className={styles.header}>\n                    {room && <h2 className={styles.topic}>{room.topic}</h2>}\n                    <div className={styles.actions}>\n                        <button className={styles.actionBtn}>\n                            <img src=\"/images/palm.png\" alt=\"palm-icon\" />\n                        </button>\n                        <button\n                            onClick={handManualLeave}\n                            className={styles.actionBtn}\n                        >\n                            <img src=\"/images/win.png\" alt=\"win-icon\" />\n                            <span>Leave quietly</span>\n                        </button>\n                    </div>\n                </div>\n                <div className={styles.clientsList}>\n                    {clients.map((client) => {\n                        return (\n                            <div className={styles.client} key={client.id}>\n                                <div className={styles.userHead}>\n                                    <img\n                                        className={styles.userAvatar}\n                                        src={client.avatar}\n                                        alt=\"\"\n                                    />\n                                    <audio\n                                        autoPlay\n                                        playsInline\n                                        ref={(instance) => {\n                                            provideRef(instance, client.id);\n                                        }}\n                                    />\n                                    <button\n                                        onClick={() =>\n                                            handleMuteClick(client.id)\n                                        }\n                                        className={styles.micBtn}\n                                    >\n                                        {client.muted ? (\n                                            <img\n                                                className={styles.mic}\n                                                src=\"/images/mic-mute.png\"\n                                                alt=\"mic\"\n                                            />\n                                        ) : (\n                                            <img\n                                                className={styles.micImg}\n                                                src=\"/images/mic.png\"\n                                                alt=\"mic\"\n                                            />\n                                        )}\n                                    </button>\n                                </div>\n                                <h4>{client.name}</h4>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}