{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neha\\\\Desktop\\\\Live_Voice_Rooms\\\\frontend\\\\src\\\\pages\\\\Steps\\\\StepAvatar\\\\StepAvatar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../../../components/shared/Card/Card';\nimport Button from '../../../components/shared/Button/Button';\nimport styles from './StepAvatar.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAvatar } from '../../../store/activateSlice';\nimport { activate } from '../../../http';\nimport { setAuth } from '../../../store/authSlice';\nimport Loader from '../../../components/shared/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StepAvatar = _ref => {\n  _s();\n\n  let {\n    onNext\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    name,\n    avatar\n  } = useSelector(state => state.activate);\n  const [image, setImage] = useState('/images/monkey-avatar.png');\n  const [loading, setLoading] = useState(false);\n  const [unMounted, setUnMounted] = useState(false);\n\n  function captureImage(e) {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = function () {\n      setImage(reader.result);\n      dispatch(setAvatar(reader.result));\n    };\n  }\n\n  async function submit() {\n    if (!name || !avatar) return;\n    setLoading(true);\n\n    try {\n      const {\n        data\n      } = await activate({\n        name,\n        avatar\n      });\n\n      if (data.auth) {\n        if (!unMounted) {\n          dispatch(setAuth(data));\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      setUnMounted(true);\n    };\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {\n    message: \"Activation in progress...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      title: `Okay, ${name}`,\n      icon: \"monkey-emoji\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.subHeading,\n        children: \"How\\u2019s this photo?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.avatarWrapper,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.avatarImage,\n          src: image,\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: captureImage,\n          id: \"avatarInput\",\n          type: \"file\",\n          className: styles.avatarInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.avatarLabel,\n          htmlFor: \"avatarInput\",\n          children: \"Choose a different photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: submit,\n          text: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(StepAvatar, \"edLf9Rvx6AxrhoXMpdnYP8ilct4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = StepAvatar;\nexport default StepAvatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepAvatar\");","map":{"version":3,"sources":["C:/Users/neha/Desktop/Live_Voice_Rooms/frontend/src/pages/Steps/StepAvatar/StepAvatar.jsx"],"names":["React","useState","useEffect","Card","Button","styles","useSelector","useDispatch","setAvatar","activate","setAuth","Loader","StepAvatar","onNext","dispatch","name","avatar","state","image","setImage","loading","setLoading","unMounted","setUnMounted","captureImage","e","file","target","files","reader","FileReader","readAsDataURL","onloadend","result","submit","data","auth","err","console","log","subHeading","avatarWrapper","avatarImage","avatarInput","avatarLabel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../../../components/shared/Card/Card';\nimport Button from '../../../components/shared/Button/Button';\nimport styles from './StepAvatar.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAvatar } from '../../../store/activateSlice';\nimport { activate } from '../../../http';\nimport { setAuth } from '../../../store/authSlice';\nimport Loader from '../../../components/shared/Loader/Loader';\n\nconst StepAvatar = ({ onNext }) => {\n    const dispatch = useDispatch();\n    const { name, avatar } = useSelector((state) => state.activate);\n    const [image, setImage] = useState('/images/monkey-avatar.png');\n    const [loading, setLoading] = useState(false);\n    const [unMounted, setUnMounted] = useState(false);\n\n    function captureImage(e) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = function () {\n            setImage(reader.result);\n            dispatch(setAvatar(reader.result));\n        };\n    }\n    async function submit() {\n        if (!name || !avatar) return;\n        setLoading(true);\n        try {\n            const { data } = await activate({ name, avatar });\n            if (data.auth) {\n                if (!unMounted) {\n                    dispatch(setAuth(data));\n                }\n            }\n        } catch (err) {\n            console.log(err);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            setUnMounted(true);\n        };\n    }, []);\n\n    if (loading) return <Loader message=\"Activation in progress...\" />;\n    return (\n        <>\n            <Card title={`Okay, ${name}`} icon=\"monkey-emoji\">\n                <p className={styles.subHeading}>Howâ€™s this photo?</p>\n                <div className={styles.avatarWrapper}>\n                    <img\n                        className={styles.avatarImage}\n                        src={image}\n                        alt=\"avatar\"\n                    />\n                </div>\n                <div>\n                    <input\n                        onChange={captureImage}\n                        id=\"avatarInput\"\n                        type=\"file\"\n                        className={styles.avatarInput}\n                    />\n                    <label className={styles.avatarLabel} htmlFor=\"avatarInput\">\n                        Choose a different photo\n                    </label>\n                </div>\n                <div>\n                    <Button onClick={submit} text=\"Next\" />\n                </div>\n            </Card>\n        </>\n    );\n};\n\nexport default StepAvatar;\n"]},"metadata":{},"sourceType":"module"}